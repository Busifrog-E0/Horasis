import swaggerAutogen from 'swagger-autogen';

import usersDefinitions from './swaggerDocs/usersDefinitions.js';
import activitiesDefinitions from './swaggerDocs/activitiesDefinitions.js';
import commentsDefinitions from './swaggerDocs/commentsDefinitions.js';
import chatDefinitions from './swaggerDocs/chatDefinitions.js';
import discussionsDefinitions from './swaggerDocs/discussionsDefinitions.js';
import membersDefinitions from './swaggerDocs/membersDefinitions.js';
import eventsDefinitions from './swaggerDocs/eventsDefinitions.js';

const doc = {
    info: {
        version: "1.0.0",
        title: "My API",
        description: "Documentation automatically generated by the <b>swagger-autogen</b> module."
    },
    host: "localhost:3010",
    basePath: "/",
    schemes: ['http'],
    consumes: ['application/json'],
    produces: ['application/json'],
    tags: [
        {
            "name": "Users",
            "description": "",
        },
        {
            "name": "Follow",
            "description": "",
        },
        {
            "name": "Connections",
            "description": "",
        },
        {
            "name": "Files",
            "description": "",
        },
        {
            "name": "Activities",
            "description": "",
        },
        {
            "name": "Comments",
            "description": "",
        },
        {
            "name": "Chat",
            "description": "",
        },
        {
            "name": "Discussions",
            "description": "",
        },
        {
            "name": "Events",
            "description": "",
        }
    ],
    securityDefinitions: {
        BearerAuth: {
            type: 'apiKey',
            name: 'Authorization',
            in: 'header',
            description: 'Enter your bearer token in the format **Bearer &lt;token&gt;**',
        },
    },
    security: [
        {
            BearerAuth: [],
        },
    ],
    definitions: {
        LoginData: { Token: "string", RefreshToken: "string", CurrentUser: { Role: "User", UserId: "" } },
        ...usersDefinitions,
        ...activitiesDefinitions,
        ...commentsDefinitions,
        ...chatDefinitions,
        ...discussionsDefinitions,
        ...membersDefinitions,
        ...eventsDefinitions
    }
}





const generateSwaggerDocs = async () => {

    const endpointsFiles = ['./routes/index.js']
    const outputFile = './swaggerOutput.json';

    swaggerAutogen(outputFile, endpointsFiles, doc)
};

generateSwaggerDocs();